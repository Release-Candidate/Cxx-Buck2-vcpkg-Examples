# buildifier: disable=no-effect
cxx_library(
    name = "library",
    srcs = glob(["*.cpp"]),
    exported_headers = ["./lib.hpp"],
    link_style = "static",
    compiler_flags = select({
        "prelude//os:linux": ["-std=c++23"],
        "prelude//os:macos": select({
            "prelude//cpu:arm64": [ "-std=c++23",
                                    "-Wall",
                                    "-Wunused-variable",
                                    "-Wunused-const-variable",
                                    "-D__STDC_CONSTANT_MACROS",
                                    "-D__STDC_FORMAT_MACROS",
                                    "-D__STDC_LIMIT_MACROS",
                                    "-L/opt/homebrew/opt/llvm/lib/c++",
                                    "-stdlib=libc++",
                                    "-Wl,-rpath,/opt/homebrew/opt/llvm/lib/c++",
                                    "-Wl,-search_paths_first",
                                    "-Wl,-headerpad_max_install_names",
                                    "-I/opt/homebrew/opt/llvm/include/"],

            "prelude//cpu:x86_64": [ "-std=c++23",
                                    "-Wall",
                                    "-Wunused-variable",
                                    "-Wunused-const-variable",
                                    "-D__STDC_CONSTANT_MACROS",
                                    "-D__STDC_FORMAT_MACROS",
                                    "-D__STDC_LIMIT_MACROS",
                                    "-L/opt/homebrew/opt/llvm/lib/c++",
                                    "-stdlib=libc++",
                                    "-Wl,-rpath,/opt/homebrew/opt/llvm/lib/c++",
                                    "-Wl,-search_paths_first",
                                    "-Wl,-headerpad_max_install_names",
                                    "-I/opt/homebrew/opt/llvm/include/"],
        }),
        "prelude//os:windows": ["-std=c++23"],
    }),
    deps = ["//third-party:gmp"],
    visibility = ["PUBLIC"],
)
